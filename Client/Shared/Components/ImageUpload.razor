<InputFile OnChange="HandleSelected" />

@if (string.IsNullOrEmpty(errorMessage))
{
    <span style="color:red">@errorMessage</span>
}

@if (!string.IsNullOrEmpty(Image))
{
    <img src="@Image" alt="Uploaded Image" style="width:100%" />
}
else
{
    <img src="/Images/placeholder.jpg" style="width:100%" />
}

@code {
    [Parameter] public EventCallback<string> OnChange { get; set; }
    [Parameter] public string? Image { get; set; }

    private string errorMessage = string.Empty;
    
    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        errorMessage = string.Empty;
        
        var file = e.File;

        if (file != null)
        {
            // Check file extension and size before processing
            var extension = Path.GetExtension(file.Name);
            var allowedExtensions = new[]
            {
                ".png",
                ".jpg",
                ".jpeg"
            };
            var maxFileSizeInBytes = 5 * 1024 * 1024 * 8;// 5MB

            if (file.Size > maxFileSizeInBytes || !allowedExtensions.Contains(extension.ToLower()))
            {
                errorMessage = "Please select a file that is within 5MB and in .png, .jpg, or .jpeg format.";
                return;
            }

            using (var memoryStream = new MemoryStream(maxFileSizeInBytes))
            {
                await file.OpenReadStream(maxFileSizeInBytes).CopyToAsync(memoryStream);
                var content = memoryStream.ToArray();

                var base64 = Convert.ToBase64String(content);
                
                await OnChange.InvokeAsync($"data:image/{extension.Replace(".", "")};base64,{base64}");
            }
        }
    }
}